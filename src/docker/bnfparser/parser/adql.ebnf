;
; Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
; All rights reserved.
;
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.
;
; !syntax("adql-ebnf")

    <SP>  ::= %x20 ; space
    <TAB> ::= %x09 ; horizontal tab

    <CR>  ::= %x0D ; carriage return
    <LF>  ::= %x0A ; line feed

    <NEWLINE> ::= <CR>|<LF>
    <SPACE>   ::= <SP>|<TAB>
    <WHITESP> ::= <SP>|<TAB>|<CR>|<LF>

    <opt_whitespace> ::= {<WHITESP>}
    <req_whitespace> ::= {<WHITESP>}<WHITESP>

    <comma>      ::= ","
    <period>     ::= "."
    <asterisk>   ::= "*"
    <ampersand>  ::= "&"
    <underscore> ::= "_"

    <double_quote> ::= %x22
    <single_quote> ::= %x27

    <solidus>   ::= "/"
    <backslash> ::= "\"

    <plus_symbol>     ::= "+"
    <minus_symbol>    ::= "-"
    <divide_symbol>   ::= "/"
    <multiply_symbol> ::= "*"
    <modulo_symbol>   ::= "%"

    <arithmetic_symbol> ::= <plus_symbol> | <minus_symbol> | <divide_symbol> | <multiply_symbol> | <modulo_symbol>

    <left_square>    ::= "["
    <right_square>   ::= "]"
    <square_bracket> ::= <left_square> | <right_square>

    <left_curly>     ::= "["
    <right_curly>    ::= "]"
    <curly_bracket>  ::= <left_curly> | <right_curly>

    <left_round>     ::= ")"
    <right_round>    ::= "("
    <round_bracket>  ::= <left_round> | <right_round>

    <any_bracket>    ::= <round_bracket> | <curly_bracket> | <square_bracket>

;   <dec_digit>  ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
;   <hex_digit>  ::= "a" | "b" | "c" | "d" | "e" | "f" | "A" | "B" | "C" | "D" | "E" | "F"
;   <lower_case> ::= "a"  | "b"  | "c"  | "d"  | "e"  | "f"  | "g"  | "h"  | "i"  | "j"  | "k"  | "l"  | "m"  | "n"  | "o"  | "p"  | "q"  | "r"  | "s"  | "t"  | "u"  | "v"  | "w"  | "x"  | "y"  | "z"
;   <upper_case> ::= "A"  | "B"  | "C"  | "D"  | "E"  | "F"  | "G"  | "H"  | "I"  | "J"  | "K"  | "L"  | "M"  | "N"  | "O"  | "P"  | "Q"  | "R"  | "S"  | "T"  | "U"  | "V"  | "W"  | "X"  | "Y"  | "Z"

    <dec_digit>  ::= %x30 | %x31 | %x32 | %x33 | %x34 | %x35 | %x36 | %x37 | %x38 | %x39
    <hex_digit>  ::= %x41 | %x42 | %x43 | %x44 | %x45 | %x46 | %x61 | %x62 | %x63 | %x64 | %x65 | %x66
    <lower_case> ::= %x61 | %x62 | %x63 | %x64 | %x65 | %x66 | %x67 | %x68 | %x69 | %x6A | %x6B | %x6C | %x6D | %x6E | %x6F | %x70 | %x71 | %x72 | %x73 | %x74 | %x75 | %x76 | %x77 | %x78 | %x79 | %x7A
    <upper_case> ::= %x41 | %x42 | %x43 | %x44 | %x45 | %x46 | %x47 | %x48 | %x49 | %x4A | %x4B | %x4C | %x4D | %x4E | %x4F | %x50 | %x51 | %x52 | %x53 | %x54 | %x55 | %x56 | %x57 | %x58 | %x59 | %x5A

    <ascii_letter> ::= <upper_case> | <lower_case>

    <simple_char> ::= { <ascii_letter> | <dec_digit> | <underscore> }
    <simple_word>  ::= <ascii_letter> { <simple_char> }

    <complex_char> ::= { <ascii_letter> | <dec_digit> | <underscore> | <any_bracket> | <arithmetic_symbol> }
    <complex_word> ::= <complex_char> { <complex_char> }

    <regular_identifier>   ::= <simple_word>
    <delimited_identifier> ::= <double_quote> <complex_word> <double_quote>

    <identifier> ::= <regular_identifier> | <delimited_identifier>

    <list_comma> ::= <opt_whitespace> <comma> <opt_whitespace>


    <query> ::=
        {<select_query>}
        <opt_whitespace>


    <select_query> ::=
        <select_clause>
        <from_clause>

    <select_clause> ::=
        <opt_whitespace>
        "SELECT"
        <req_whitespace>
        ( <asterisk> | <select_list> )

    <select_list> ::=
        <select_field> { <list_comma> <select_field> }

    <select_field> ::=
        ( <table_name> | <table_alias> ) <period> <asterisk>
        | <value_expression> [ <req_whitespace> "AS" <req_whitespace> <value_alias> ]


    <from_clause> ::=
        <req_whitespace>
        "FROM"
        <req_whitespace>
        <from_list>

    <from_list> ::=
        <from_field> { <list_comma> <from_field> }

    <from_field> ::=
        <table_name> [ <req_whitespace> "AS" <req_whitespace> <table_alias> ]


    <value_alias>  ::= <identifier>
    <table_alias>  ::= <identifier>

    <column_name>          ::= <simple_column_name> | <complex_column_name>
    <simple_column_name>   ::= <identifier>
    <complex_column_name>  ::= <table_name> <period> <simple_column_name>

    <table_name>           ::= <simple_table_name> | <complex_table_name>
    <simple_table_name>    ::= <identifier>
    <complex_table_name>   ::= <schema_name> <period> <simple_table_name>

    <schema_name>          ::= <simple_schema_name> | <complex_schema_name>
    <simple_schema_name>   ::= <identifier>
    <complex_schema_name>  ::= <catalog_name> <period> <simple_schema_name>

    <catalog_name>         ::= <simple_catalog_name>
    <simple_catalog_name>  ::= <identifier>



    <value_expression> ::= <column_name>



