adql_language_character <- simple_latin_letter / digit / sql_special_character;
reserved_keywords <- "ABS" / "ACOS" / "AREA" / "ASIN" / "ATAN" / "ATAN2" / "BIT_AND" / "BIT_NOT" / "BIT_OR" / "BIT_XOR" / "BOX" / "CEILING" / "CENTROID" / "CIRCLE" / "CONTAINS" / "COORD1" / "COORD2" / "COORDSYS" / "COS" / "DEGREES" / "DISTANCE" / "EXP" / "FLOOR" / "ILIKE" / "INTERSECTS" / "IN_UNIT" / "LOG" / "LOG10" / "MOD" / "PI" / "POINT" / "POLYGON" / "POWER" / "RADIANS" / "REGION" / "RAND" / "ROUND" / "SIN" / "SQRT" / "TOP" / "TAN" / "TRUNCATE";
sql_embedded_language_character <- "[" / "]";
SQL_reserved_keywords <-  "SELECT" / "FROM" / "ORDER BY" / "DISTINCT" / "ALL" / "TOP" / "AS" / "ASC" / "DESC" / "ABS" / "ACOS"/ "AREA" / "ASIN" / "ATAN" / "ATAN2" / "BIT_AND" / "BIT_NOT" / "BIT_OR" / "BIT_XOR" / "BOX" / "CEILING" / "CENTROID" / "CIRCLE" / "CONTAINS" / "COORD1" / "COORD2" / "COORDSYS" / "COS" / "DEGREES" / "DISTANCE" / "EXP" / "FLOOR" / "ILIKE" / "INTERSECTS" / "IN_UNIT" / "LOG" / "LOG10" / "MOD" / "PI" / "POINT" / "POLYGON" / "PI" / "POINT" / "POLYGON" / "POWER" / "RADIANS" / "REGION" / "RAND" / "ROUND" / "SIN" / "SQRT" / "TAN" / "ABSOLUTE" / "ACTION" / "ADD" / "ALL" / "ALLOCATE" / "ALTER" / "AND" / "ANY" / "ARE" / "ASSERTION" / "AT" / "AUTHORIZATION" / "AVG" / "BEGIN" / "BETWEEN" / "BIT" / "BIT_LENGTH" / "BOTH" / "BY" / "CASCADE" / "CASCADED" / "CASE" / "CAST" / "CATALOG" / "CHAR" / "CHARACTER" / "CHAR_LENGTH" / "CHARACTER_LENGTH" / "CHECK" / "CLOSE" / "COALESCE" / "COLLATE" / "COLLATION" / "COLUMN" / "COMMIT" / "CONNECT" / "CONNECTION" / "CONSTRAINT" / "CONSTRAINTS" / "CONTINUE" / "CONVERT" / "CORRESPONDING" / "COUNT" / "CREATE" / "CROSS" / "CURRENT" / "CURRENT_DATE" / "CURRENT_TIME" / "CURRENT_TIMESTAMP" / "CURRENT_USER" / "CURSOR" / "DATE" / "DAY" / "DEALLOCATE" / "DECIMAL" / "DECLARE" / "DEFAULT" / "DEFERRABLE" / "DEFERRED" / "DELETE" / "DESCRIBE" / "DESCRIPTOR" / "DIAGNOSTICS" / "DISCONNECT" / "DOMAIN" / "DOUBLE" / "DROP" / "ELSE" / "END" / "END<-EXEC" / "ESCAPE" / "EXCEPT" / "EXCEPTION" / "EXEC" / "EXECUTE" / "EXISTS" / "EXTERNAL" / "EXTRACT" / "FALSE" / "FETCH" / "FIRST" / "FLOAT" / "FOR" / "FOREIGN" / "FOUND" / "FROM" / "FULL" / "GET" / "GLOBAL" / "GO" / "GOTO" / "GRANT" / "GROUP" / "HAVING" / "HOUR" / "IDENTITY" / "IMMEDIATE" / "IN" / "INDICATOR" / "INITIALLY" / "INNER" / "INPUT" / "INSENSITIVE" / "INSERT" / "INT" / "INTEGER" / "INTERSECT" / "INTERVAL" / "INTO" / "IS" / "ISOLATION" / "JOIN" / "KEY" / "LANGUAGE" / "LAST" / "LEADING" / "LEFT" / "LEVEL" / "LIKE" / "ILIKE" / "LOCAL" / "LOWER" / "MATCH" / "MAX" / "MIN" / "MINUTE" / "MODULE" / "MONTH" / "NAMES" / "NATIONAL" / "NATURAL" / "NCHAR" / "NEXT" / "NO" / "NOT" / "NULL" / "NULLIF" / "NUMERIC" / "OCTET_LENGTH" / "OF" / "ON" / "ONLY" / "OPEN" / "OPTION" / "OR" / "ORDER" / "OUTER" / "OUTPUT" / "OVERLAPS" / "PAD" / "PARTIAL" / "POSITION" / "PRECISION" / "PREPARE" / "PRESERVE" / "PRIMARY" / "PRIOR" / "PRIVILEGES" / "PROCEDURE" / "PUBLIC" / "READ" / "REAL" / "PREFERENCES" / "RELATIVE" / "RESTRICT" / "REVOKE" / "RIGHT" / "ROLLBACK" / "ROWS" / "SCHEMA" / "SCROLL" / "SECOND" / "SECTION" / "SELECT" / "SESSION" / "SESSION_USER" / "SET" / "SIZE" / "SMALLINT" / "SOME" / "SPACE" / "SQL" / "SQLCODE" / "SQLERROR" / "SQLSTATE" / "SUBSTRING" / "SUM" / "SYSTEM_USER" / "TABLE" / "TEMPORARY" / "THEN" / "TIME" / "TIMESTAMP" / "TIMEZONE_HOUR" / "TIMEZONE_MINUTE" / "TO" / "TRAILING" / "TRANSACTION" / "TRANSLATE" / "TRANSLATION" / "TRIM" / "TRUE" / "UNION" / "UNIQUE" / "UNKNOWN" / "UPDATE" / "UPPER" / "USAGE" / "USER" / "USING" / "VALUE" / "VALUES" / "VARCHAR" / "VARYING" / "VIEW" / "WHEN" / "WHENEVER" / "WHERE" / "WITH" / "WORK" / "WRITE" / "YEAR" / "ZONE";
SQL_special_character <- " " / r'"' / "%" / "&" / "'" / "(" / ")" / "*" / "+" / "," / "-" / "." / "/" / ":" / ";" / "<" / "=" / ">" / "?" / "_" / "|";
approximate_numeric_literal <- mantissa "E" exponent;
area <- "AREA" "(" geometry_value_expression ")";
as_clause <- __ ("AS" __)? column_name;
between_predicate <- value_expression __ ("NOT" __)? "BETWEEN" __ value_expression __ "AND" __ value_expression;
bitwise_expression <- "~" numeric_value_expression / numeric_value_expression _ ("%" / "|" / "^") _ numeric_value_expression;
boolean_factor <- "NOT" __ boolean_primary;
boolean_function <- "";
boolean_literal <- "True" / "False";
boolean_primary <- "(" search_condition ")" / predicate / boolean_value_expression;
boolean_term <- boolean_factor / (boolean_term __ ("AND" / "OR") __ boolean_factor);
boolean_value_expression <- boolean_literal / boolean_function / user_defined_function;
box <- "BOX" "(" (coord_sys ",")? coordinates "," numeric_value_expression "," numeric_value_expression ")";
catalog_name <- identifier;
centroid <- "CENTROID" "(" geometry_value_expression ")";
character_factor <- character_primary;
character_primary <- value_expression_primary / string_value_function;
character_representation <- nonquote_character / quote_symbol;
character_string_literal <- """ character_representation+ """;
character_value_expression <- concatenation / character_factor;
circle <- "CIRCLE" "(" (coord_sys ",")? coordinates "," radius ")";
column_name <- identifier;
column_name_list <- column_name ("," _ column_name)*;
column_reference <- (qualifier ".")? column_name;
comment <- comment_introducer comment_character* newline;
comment_character <- nonquote_character / "'";
comment_introducer <- "--" "-"*;
comp_op <- "=" / "!=" / "<>" / "<" / ">" / "<=" / ">=";
comparison_predicate <- value_expression comp_op value_expression;
concatenation <- character_value_expression "||" character_factor;
contains <- "CONTAINS" "(" geometry_value_expression "," geometry_value_expression ")";
coord1 <- "COORD1" "(" coord_value ")";
coord2 <- "COORD2" "(" coord_value ")";
coord_sys <- string_value_expression;
coord_value <- point / column_reference;
coordinates <- numeric_value_expression "," numeric_value_expression;
correlation_name <- identifier;
correlation_specification <- ("AS" __)? correlation_name;
default_function_prefix <- "";
delimited_identifier <- r'"' delimited_identifier_body r'"';
delimited_identifier_body <- delimited_identifier_part*;
delimited_identifier_part <- nondoublequote_character / r'"';
delimiter_token <- character_string_literal / delimited_identifier / SQL_special_character / "!=" / "<>" / ">=" / "<=" / "||" / ".." / "[" / "]";
derived_column <- value_expression as_clause?;
derived_table <- table_subquery;
digit <- r'[0-9]';
distance_function <- "DISTANCE" "(" coord_value "," coord_value ")" / "DISTANCE" "(" numeric_value_expression "," numeric_value_expression "," numeric_value_expression "," numeric_value_expression ")";
double_period <- "..";
double_quote <- r'"';
double_quote_symbol <- r'"' r'"';
equals_operator <- "<-";
exact_numeric_literal <- unsigned_decimal ("." unsigned_decimal)? / "." unsigned_decimal;
exists_predicate <- "EXISTS" __ table_subquery;
exponent <- signed_integer;
extract_coordsys <- "COORDSYS" "(" geometry_value_expression ")";
factor <-  sign? numeric_primary;
from_clause <- "FROM" __ table_reference ("," _ table_reference)* __;
general_literal <- character_string_literal;
general_set_function <- set_function_type "(" set_quantifier? value_expression ")";
geometry_value_expression <- value_expression_primary / geometry_value_function;
geometry_value_function <- box / centroid / circle / point / polygon / user_defined_function;
group_by_clause <- "GROUP BY" __ group_by_term_list;
group_by_term <- column_reference / value_expression;
group_by_term_list <- group_by_term (_ "," group_by_term)*;
having_clause <- "HAVING" __ search_condition;
hex_digit <- digit / r'[a-fA-F]';
identifier <- regular_identifier / delimited_identifier;
in_predicate <- value_expression (__ "NOT")? __ "IN" in_predicate_value;
in_predicate_value <- table_subquery / "(" in_value_list ")";
in_value_list <- value_expression (_ "," value_expression)*;
intersects <- "INTERSECTS" "(" geometry_value_expression "," geometry_value_expression ")";
join_column_list <- column_name_list;
join_condition <- "ON" __ search_condition;
join_specification <- join_condition / named_columns_join;
join_type <- "INNER" / outer_join_type (__ "OUTER")?;
joined_table <- qualified_join / "(" joined_table ")";
keyword <- SQL_reserved_word / ADQL_reserved_word;
like_predicate <- match_value (__ "NOT")? __ ("LIKE" / "ILIKE") __ pattern;
mantissa <- exact_numeric_literal;
match_value <- character_value_expression;
math_function <- "ABS" "(" numeric_value_expression ")" / "CEILING" "(" numeric_value_expression ")" / "DEGREES" "(" numeric_value_expression ")" / "EXP" "(" numeric_value_expression ")" / "FLOOR" "(" numeric_value_expression ")" / "LOG" "(" numeric_value_expression ")" / "LOG10" "(" numeric_value_expression ")" / "MOD" "(" numeric_value_expression "," numeric_value_expression ")" / "PI()" / "POWER" "(" numeric_value_expression "," numeric_value_expression ")" / "RADIANS" "(" numeric_value_expression ")" / "RAND" "(" (unsigned_decimal)? ")" / "ROUND" "(" numeric_value_expression ("," signed_integer) ")" / "SQRT" "(" numeric_value_expression ")" / "TRUNCATE" "(" numeric_value_expression ("," signed_integer)? ")";
named_columns_join <- "USING" "(" join_column_list ")";
newline <- "\n" / "\r\n";
nondoublequote_character <- "";
nonquote_character <- "";
non_predicate_geometry_function <- area / coord1 / coord2 / distance_function;
nondelimiter_token <- regular_identifier / keyword / unsigned_numeric_literal;
non_join_query_expression <- non_join_query_term / query_expression ("UNION" / "EXCEPT") "ALL"? query_term;
non_join_query_primary <- query_specification / "(" non_join_query_expression ")";
non_join_query_term <- non_join_query_primary / query_term "INTERSECT" "ALL"? query_expression;
null_predicate <- column_reference "IS" "NOT"? "NULL";
numeric_geometry_function <- predicate_geometry_function / non_predicate_geometry_function;
numeric_primary <- value_expression_primary / numeric_value_function;
numeric_value_expression <- bitwise_expression / term ("+" / "-") term;
numeric_value_function <- trig_function / math_function / numeric_geometry_function  / user_defined_function;
offset_clause <- "OFFSET" unsigned_decimal;
order_by_clause <- "ORDER BY" __ order_by_term_list;
order_by_direction <- "ASC" / "DESC";
order_by_expression <- unsigned_decimal / column_reference / value_expression;
order_by_term <- order_by_expression (__ order_by_direction)?;
order_by_term_list <- order_by_term ("," order_by_term)*;
outer_join_type <- "LEFT" / "RIGHT" / "FULL";
pattern <- character_value_expression;
point <- "POINT" "(" (coord_sys ",")? coordinates ")";
polygon <- "POLYGON" "(" (coord_sys ",")? coordinates "," coordinates ("," coordinates)* ")";
predicate <- comparison_predicate / between_predicate / in_predicate / like_predicate / null_predicate / exists_predicate;
predicate_geometry_function <- contains / intersects;
qualified_join <- table_reference (__ "NATURAL")? (__ join_type)? __  "JOIN" table_reference join_specification?;
qualifier <- table_name / correlation_name;
query_expression <- non_join_query_expression / joined_table;
query_term <- non_join_query_term / joined_table;
query_name <- identifier;
query_specification <- "WITH" __ with_query select_query;
quote_symbol <- "''";
radius <- numeric_value_expression;
regular_identifier <- (simple_Latin_letter* (digit / simple_Latin_letter / "_")*)+;
schema_name <- catalog_name "."? unqualified_schema_name;
search_condition <- boolean_term / search_condition "OR" boolean_term;
select_list <- "*" / select_sublist ("," _ select_sublist)*;
select_query <- "SELECT" __ set_quantifier (__ set_limit)? __ select_list __ table_expression;
select_sublist <- derived_column / qualifier "." "*";
set_function_specification <- "COUNT(*)" / general_set_function;
set_function_type <- "AVG" / "MAX" / "MIN" / "SUM" / "COUNT";
set_limit <- "TOP" __ unsigned_decimal;
set_quantifier <- "DISTINCT" / "ALL";
sign <- "+" / "-";
signed_integer <- sign? unsigned_decimal;
simple_Latin_letter <- simple_Latin_upper_case_letter / simple_Latin_lower_case_letter;
simple_Latin_lower_case_letter <- "[a-z]";
simple_Latin_upper_case_letter <- "[A-Z]";
string_geometry_function <- extract_coordsys;
string_value_expression <- character_value_expression;
string_value_function <- string_geometry_function / user_defined_function;
subquery <- "(" query_expression ")";
table_expression <- from_clause where_clause? group_by_clause? having_clause? order_by_clause? offset_clause?;
table_name <- (schema_name ".")? identifier;
table_reference <- table_name correlation_specification? / derived_table correlation_specification / joined_table;
table_subquery <- subquery;
term <- factor / term "*" factor / term "/" factor;
token <- nondelimiter_token / delimiter_token;
trig_function <- "ACOS" "(" numeric_value_expression ")" / "ASIN" "(" numeric_value_expression ")" / r"ATAN" "(" numeric_value_expression ")" / "ATAN2" "(" numeric_value_expression "," numeric_value_expression ")" / "COS" "(" numeric_value_expression ")" / "COT" "(" numeric_value_expression ")" / "SIN" "(" numeric_value_expression ")" / "TAN" "(" numeric_value_expression ")";
unqualified_schema_name <- identifier;
unsigned_decimal <- digit+;
unsigned_hexadecimal <- "0x" hex_digit+;
unsigned_literal <- unsigned_numeric_literal / general_literal;
unsigned_numeric_literal <- exact_numeric_literal / approximate_numeric_literal / unsigned_hexadecimal;
unsigned_value_specification <- unsigned_literal;
user_defined_function <- user_defined_function_name "(" (user_defined_function_param ("," user_defined_function_param)+)? ")";
user_defined_function_name <- default_function_prefix? regular_identifier;
user_defined_function_param <- value_expression;
value_expression <- numeric_value_expression / string_value_expression / boolean_value_expression / geometry_value_expression;
value_expression_primary <- unsigned_value_specification / column_reference / set_function_specification / "(" value_expression ")";
where_clause <- "WHERE" __  search_condition;
with_query <- query_name column_name_list? __  "AS" __ query_specification;
_ <- (Space / comment)*;
__ <- (Space / comment)+;
Space <- " "  / "\t" / EndOfLine;
EndOfLine <- "\r\n" / "\n" / "\r";
